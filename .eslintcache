[{"D:\\Programming\\React\\calc\\src\\index.js":"1","D:\\Programming\\React\\calc\\src\\components\\app\\index.js":"2","D:\\Programming\\React\\calc\\src\\components\\app\\app.js":"3"},{"size":162,"mtime":1608982679825,"results":"4","hashOfConfig":"5"},{"size":47,"mtime":1608982685041,"results":"6","hashOfConfig":"5"},{"size":6976,"mtime":1609297567688,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"8wbafu",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\Programming\\React\\calc\\src\\index.js",[],["16","17"],"D:\\Programming\\React\\calc\\src\\components\\app\\index.js",[],"D:\\Programming\\React\\calc\\src\\components\\app\\app.js",["18"],"import React, { useState } from 'react';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    const [value, setValue] = useState([]);\r\n\r\n    const onButtonClick = (num) => {\r\n        setValue((value) => [...value, num]);\r\n    };\r\n\r\n    const onActionClick = (act) => {\r\n        const idSpase = value.lastIndexOf(' '); // last space\r\n        const targ = value.slice(idSpase + 1).filter((e) => !isNaN(e)).join(''); // last number\r\n\r\n        switch (true) {\r\n            // set multiplication before parentheses\r\n            case act === '(' && typeof value[value.length - 1] === 'number':\r\n                setValue((value) => [...value, ' ', '*', ' ', act]);\r\n                break;\r\n            // change to negative number\r\n            case act === '+/-':\r\n                const neg = -targ;\r\n                // double minus\r\n                if (value[idSpase - 1] === '-') {\r\n                    setValue((value) => [...value.slice(0, idSpase + 1), '(', neg, ')']);\r\n                } else {\r\n                    setValue((value) => [...value.slice(0, idSpase + 1), neg]);\r\n                }\r\n                break;\r\n            // square root\r\n            case act === 'sqrt':\r\n                const sqrt = Math.sqrt(targ);\r\n                setValue((value) => [...value.slice(0, idSpase + 1), sqrt]);\r\n                break;\r\n\r\n            default: setValue((value) => [...value, ' ', act, ' ']);\r\n        }\r\n    };\r\n\r\n    const onResultClick = () => {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n\r\n        const valNoSpace = value.join('').replace(/\\s/g, ''); //delete space\r\n        setValue([eval(valNoSpace)]);\r\n    };\r\n\r\n    const onClear = () => {\r\n        setValue([]);\r\n    };\r\n\r\n    const onBackspace = () => {\r\n        if (value.length === 1) {\r\n            onClear();\r\n        } else {\r\n            setValue((value) => [...value.slice(0, value.length - 1)]);\r\n        }\r\n    };\r\n\r\n    const handleKey = (event) => {\r\n        event.preventDefault();\r\n\r\n        switch (event.keyCode) {\r\n            case 27:\r\n                onClear();\r\n                break;\r\n            case 8:\r\n                onBackspace();\r\n                break;\r\n\r\n            default: ;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case '1':\r\n                onButtonClick('1');\r\n                break;\r\n            case '2':\r\n                onButtonClick('2');\r\n                break;\r\n            case '3':\r\n                onButtonClick('3');\r\n                break;\r\n            case '4':\r\n                onButtonClick('4');\r\n                break;\r\n            case '5':\r\n                onButtonClick('5');\r\n                break;\r\n            case '6':\r\n                onButtonClick('6');\r\n                break;\r\n            case '7':\r\n                onButtonClick('7');\r\n                break;\r\n            case '8':\r\n                onButtonClick('8');\r\n                break;\r\n            case '9':\r\n                onButtonClick('9');\r\n                break;\r\n            case '0':\r\n                onButtonClick('0');\r\n                break;\r\n\r\n            case '/':\r\n                onActionClick('/');\r\n                break;\r\n            case '*':\r\n                onActionClick('*');\r\n                break;\r\n            case '-':\r\n                onActionClick('-');\r\n                break;\r\n            case '+':\r\n                onActionClick('+');\r\n                break;\r\n            case '.':\r\n                onActionClick('.');\r\n                break;\r\n            case '(':\r\n                onActionClick('(');\r\n                break;\r\n            case ')':\r\n                onActionClick(')');\r\n                break;\r\n\r\n            case 'Enter':\r\n                onResultClick();\r\n                break;\r\n\r\n            default: ;\r\n        }\r\n    };\r\n\r\n    const numButtons = [\r\n        { label: 7, clazz: 'btn-primary' },\r\n        { label: 8, clazz: 'btn-primary' },\r\n        { label: 9, clazz: 'btn-primary' },\r\n        { label: 4, clazz: 'btn-primary' },\r\n        { label: 5, clazz: 'btn-primary' },\r\n        { label: 6, clazz: 'btn-primary' },\r\n        { label: 1, clazz: 'btn-primary' },\r\n        { label: 2, clazz: 'btn-primary' },\r\n        { label: 3, clazz: 'btn-primary' },\r\n        { label: 0, clazz: 'btn-primary' },\r\n        { label: '.', clazz: 'btn-outline-primary' }\r\n    ];\r\n\r\n    const actionButtons = [\r\n        { label: '÷', value: '/', clazz: 'btn-warning' },\r\n        { label: 'x', value: '*', clazz: 'btn-warning' },\r\n        { label: '-', value: '-', clazz: 'btn-warning' },\r\n        { label: '+', value: '+', clazz: 'btn-warning' },\r\n\r\n        { label: '(', value: '(', clazz: 'btn-light' },\r\n        { label: ')', value: ')', clazz: 'btn-light' },\r\n        { label: '√', value: 'sqrt', clazz: 'btn-light' },\r\n        { label: '+/-', value: '+/-', clazz: 'btn-light' },\r\n    ];\r\n\r\n    return (\r\n        <div className='main' onKeyDown={handleKey} tabIndex='0'>\r\n            <div className='result'>\r\n                <h1>{(value.length === 0) ? '0' : value.join('')}</h1>\r\n            </div>\r\n\r\n            <div className='container'>\r\n\r\n                <div className=\"row row-cols-2\">\r\n                    <div className=\"d-grid col\">\r\n                        <button type='button' className='btn btn-lg btn-danger' onClick={() => onClear()}>Clear</button>\r\n                    </div>\r\n                    <div className=\"d-grid col\">\r\n                        <button type='button' className='btn btn-lg btn-dark' onClick={() => onBackspace()}>Backspace</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-cols-4\">\r\n                    {\r\n                        actionButtons.map((item) => {\r\n                            return (\r\n                                <div key={item.label} className=\"d-grid col\">\r\n                                    <button type='button' className={`btn btn-lg ${item.clazz}`} onClick={() => onActionClick(item.value)}>{item.label}</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"row row-cols-3\">\r\n                    {\r\n                        numButtons.map((item) => {\r\n                            return (\r\n                                <div key={item.label} className='d-grid col'>\r\n                                    <button type='button' className={`btn btn-lg ${item.clazz}`} onClick={() => onButtonClick(item.label)}>{item.label}</button>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div className='d-grid col'>\r\n                        <button type='button' className='btn btn-success btn-lg' onClick={() => onResultClick()}>=</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":46,"column":19,"nodeType":"25","messageId":"26","endLine":46,"endColumn":23},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]